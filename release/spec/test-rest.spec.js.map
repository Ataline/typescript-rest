{"version":3,"sources":["spec/test-rest.js","spec/test-rest.ts"],"names":[],"mappings":"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","file":"test-rest.spec.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nconst express = require(\"express\");\nconst request = require('request');\nconst typescript_rest_1 = require(\"../typescript-rest\");\nclass Person {\n    constructor(id, name, age) {\n        this.id = id;\n        this.name = name;\n        this.age = age;\n    }\n}\nlet PersonService = class PersonService {\n    getPerson(id) {\n        return new Promise(function (resolve, reject) {\n            resolve(new Person(id, \"Fulano de Tal número \" + id.toString(), 35));\n        });\n    }\n    setPerson(person) {\n        return true;\n    }\n    getAll(start, size) {\n        let result = new Array();\n        for (let i = start; i < (start + size); i++) {\n            result.push(new Person(i, \"Fulano de Tal número \" + i.toString(), 35));\n        }\n        return result;\n    }\n};\n__decorate([\n    typescript_rest_1.Path(\":id\"),\n    typescript_rest_1.GET,\n    __param(0, typescript_rest_1.PathParam('id')), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [Number]), \n    __metadata('design:returntype', Promise)\n], PersonService.prototype, \"getPerson\", null);\n__decorate([\n    typescript_rest_1.PUT,\n    typescript_rest_1.Path(\"/:id\"), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [Person]), \n    __metadata('design:returntype', Boolean)\n], PersonService.prototype, \"setPerson\", null);\n__decorate([\n    typescript_rest_1.GET,\n    __param(0, typescript_rest_1.QueryParam('start')),\n    __param(1, typescript_rest_1.QueryParam('size')), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [Number, Number]), \n    __metadata('design:returntype', Array)\n], PersonService.prototype, \"getAll\", null);\nPersonService = __decorate([\n    typescript_rest_1.Path(\"/person\"), \n    __metadata('design:paramtypes', [])\n], PersonService);\nclass TestParams {\n    testHeaders(header, cookie) {\n        return \"cookie: \" + cookie + \"|header: \" + header;\n    }\n}\n__decorate([\n    typescript_rest_1.GET,\n    typescript_rest_1.Path(\"headers\"),\n    __param(0, typescript_rest_1.HeaderParam('my-header')),\n    __param(1, typescript_rest_1.CookieParam('my-cookie')), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [String, String]), \n    __metadata('design:returntype', String)\n], TestParams.prototype, \"testHeaders\", null);\ndescribe(\"Server\", () => {\n    it(\"should provide a catalog containing the exposed paths\", () => {\n        expect(typescript_rest_1.Server.getPaths().has(\"/person/:id\")).toEqual(true);\n        expect(typescript_rest_1.Server.getPaths().has(\"/headers\")).toEqual(true);\n        expect(typescript_rest_1.Server.getHttpMethods(\"/person/:id\").has(typescript_rest_1.HttpMethod.GET)).toEqual(true);\n        expect(typescript_rest_1.Server.getHttpMethods(\"/person/:id\").has(typescript_rest_1.HttpMethod.PUT)).toEqual(true);\n    });\n});\nlet app = express();\ntypescript_rest_1.Server.buildServices(app);\napp.listen(3000, function () {\n    console.log('Test app listening on port 3000!');\n    describe(\"PersonService\", () => {\n        it(\"should return the person (123) for GET on path: /person/123\", (done) => {\n            request(\"http://localhost:3000/person/123\", function (error, response, body) {\n                let result = JSON.parse(body);\n                expect(result.id).toEqual(123);\n                done();\n            });\n        });\n        it(\"should return true for PUT on path: /person/123\", (done) => {\n            request.put({\n                headers: { 'content-type': 'application/json' },\n                url: \"http://localhost:3000/person/123\",\n                body: JSON.stringify(new Person(123, \"Fulano de Tal número 123\", 35))\n            }, function (error, response, body) {\n                expect(body).toEqual(\"true\");\n                done();\n            });\n        });\n        it(\"should return the an array with 3 elements for GET on path: /person?start=0&size=3\", (done) => {\n            request(\"http://localhost:3000/person?start=0&size=3\", function (error, response, body) {\n                let result = JSON.parse(body);\n                expect(result.length).toEqual(3);\n                done();\n            });\n        });\n    });\n    describe(\"TestParams\", () => {\n        it(\"should parse header and cookies correclty\", (done) => {\n            request({\n                headers: { 'my-header': 'header value', 'Cookie': 'my-cookie=cookie value' },\n                url: \"http://localhost:3000/headers\"\n            }, function (error, response, body) {\n                expect(body).toEqual(\"cookie: cookie value|header: header value\");\n                done();\n            });\n        });\n    });\n});\n","/// <reference path=\"../../typings/index.d.ts\" />\n\nimport * as express from \"express\";\nimport * as request from 'request';\nimport {Path, Server, GET, POST, PUT, DELETE, HttpMethod,\n\t\tPathParam, QueryParam, CookieParam, HeaderParam, \n\t\tFormParam} from \"../typescript-rest\";\n\nclass Person {\n\tconstructor(id: number, name: string, age: number) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\tid: number;\n\tname: string;\n\tage: number;\n}\n\n@Path(\"/person\")\nclass PersonService {\n\t@Path(\":id\")\n\t@GET\n\tgetPerson( @PathParam('id') id: number): Promise<Person> {\n\t\treturn new Promise<Person>(function(resolve, reject){\n\t\t\tresolve(new Person(id, \"Fulano de Tal número \" + id.toString(), 35));\n\t\t});\n\t}\n\n\t@PUT\n\t@Path(\"/:id\")\n\tsetPerson( person: Person): boolean {\n\t\treturn true;\n\t}\n\n\t@GET\n\tgetAll( @QueryParam('start') start: number, \n\t\t    @QueryParam('size') size: number): Person[] {\n\t\tlet result: Array<Person> = new Array<Person>();\n\n\t\tfor (let i: number = start; i < (start + size); i++) {\n\t\t\tresult.push(new Person(i, \"Fulano de Tal número \" + i.toString(), 35));\n\t\t}\n\t\treturn result;\n\t}\n}\n\nclass TestParams {\n\t@GET\n\t@Path(\"headers\")\n\ttestHeaders( @HeaderParam('my-header') header: string,\n\t\t\t\t @CookieParam('my-cookie') cookie: string): string {\n\t\treturn \"cookie: \" + cookie + \"|header: \"+header;\n\t}\n\n}\n\ndescribe(\"Server\", () => {\n\tit(\"should provide a catalog containing the exposed paths\", () => {\n\t\texpect(Server.getPaths().has(\"/person/:id\")).toEqual(true);\n\t\texpect(Server.getPaths().has(\"/headers\")).toEqual(true);\n\t\texpect(Server.getHttpMethods(\"/person/:id\").has(HttpMethod.GET)).toEqual(true);\n\t\texpect(Server.getHttpMethods(\"/person/:id\").has(HttpMethod.PUT)).toEqual(true);\n\t});\n});\n\nlet app: express.Application = express();\nServer.buildServices(app);\n\napp.listen(3000, function() {\n\tconsole.log('Test app listening on port 3000!');\n\n\tdescribe(\"PersonService\", () => {\n\t\tit(\"should return the person (123) for GET on path: /person/123\", (done) => {\n\t\t\trequest(\"http://localhost:3000/person/123\", function(error, response, body) {\n\t\t\t\tlet result: Person = JSON.parse(body);\n\t\t\t\texpect(result.id).toEqual(123);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\t\n\t\tit(\"should return true for PUT on path: /person/123\", (done) => {\n\t\t\trequest.put({ \n\t\t\t\theaders: { 'content-type': 'application/json' },\n\t\t\t\turl: \"http://localhost:3000/person/123\", \n\t\t\t\tbody: JSON.stringify(new Person(123, \"Fulano de Tal número 123\", 35))\n\t\t\t}, function(error, response, body) {\n\t\t\t\texpect(body).toEqual(\"true\");\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit(\"should return the an array with 3 elements for GET on path: /person?start=0&size=3\", (done) => {\n\t\t\trequest(\"http://localhost:3000/person?start=0&size=3\", function(error, response, body) {\n\t\t\t\tlet result: Array<Person> = JSON.parse(body);\n\t\t\t\texpect(result.length).toEqual(3);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe(\"TestParams\", () => {\n\t\tit(\"should parse header and cookies correclty\", (done) => {\n\t\t\trequest({\n\t\t\t\theaders: { 'my-header': 'header value', 'Cookie': 'my-cookie=cookie value' },\n\t\t\t\turl: \"http://localhost:3000/headers\"\t\t\t\t\n\t\t\t}, function(error, response, body) {\n\t\t\t\texpect(body).toEqual(\"cookie: cookie value|header: header value\");\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\t});\n\n\t// process.exit();\n});\n\n"]}