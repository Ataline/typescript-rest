{"version":3,"sources":["spec/test-rest.js","spec/test-rest.ts"],"names":[],"mappings":"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","file":"test-rest.spec.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nconst express = require(\"express\");\nconst request = require('request');\nconst fs = require(\"fs\");\nconst typescript_rest_1 = require(\"../lib/typescript-rest\");\nclass Person {\n    constructor(id, name, age) {\n        this.id = id;\n        this.name = name;\n        this.age = age;\n    }\n}\nlet PersonService = class PersonService {\n    getPerson(id) {\n        return new Promise(function (resolve, reject) {\n            resolve(new Person(id, \"Fulano de Tal número \" + id.toString(), 35));\n        });\n    }\n    setPerson(person) {\n        return true;\n    }\n    getAll(start, size) {\n        let result = new Array();\n        for (let i = start; i < (start + size); i++) {\n            result.push(new Person(i, \"Fulano de Tal número \" + i.toString(), 35));\n        }\n        return result;\n    }\n};\n__decorate([\n    typescript_rest_1.Path(\":id\"),\n    typescript_rest_1.GET,\n    __param(0, typescript_rest_1.PathParam('id')), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [Number]), \n    __metadata('design:returntype', Promise)\n], PersonService.prototype, \"getPerson\", null);\n__decorate([\n    typescript_rest_1.PUT,\n    typescript_rest_1.Path(\"/:id\"), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [Person]), \n    __metadata('design:returntype', Boolean)\n], PersonService.prototype, \"setPerson\", null);\n__decorate([\n    typescript_rest_1.GET,\n    __param(0, typescript_rest_1.QueryParam('start')),\n    __param(1, typescript_rest_1.QueryParam('size')), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [Number, Number]), \n    __metadata('design:returntype', Array)\n], PersonService.prototype, \"getAll\", null);\nPersonService = __decorate([\n    typescript_rest_1.Path(\"/person\"), \n    __metadata('design:paramtypes', [])\n], PersonService);\nclass TestParams {\n    testHeaders(header, cookie) {\n        return \"cookie: \" + cookie + \"|header: \" + header;\n    }\n    testContext(q, request, response, next) {\n        if (request && response && next) {\n            response.status(201);\n            if (q === \"123\") {\n                response.send(true);\n            }\n            else {\n                response.send(false);\n            }\n        }\n    }\n    testUploadFile(file, myField) {\n        return (file\n            && (file.buffer.toString().startsWith('\"use strict\";'))\n            && (myField === \"my_value\"));\n    }\n}\n__decorate([\n    typescript_rest_1.Context, \n    __metadata('design:type', typescript_rest_1.ServiceContext)\n], TestParams.prototype, \"context\", void 0);\n__decorate([\n    typescript_rest_1.GET,\n    typescript_rest_1.Path(\"headers\"),\n    __param(0, typescript_rest_1.HeaderParam('my-header')),\n    __param(1, typescript_rest_1.CookieParam('my-cookie')), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [String, String]), \n    __metadata('design:returntype', String)\n], TestParams.prototype, \"testHeaders\", null);\n__decorate([\n    typescript_rest_1.GET,\n    typescript_rest_1.Path(\"context\"),\n    __param(0, typescript_rest_1.QueryParam('q')),\n    __param(1, typescript_rest_1.ContextRequest),\n    __param(2, typescript_rest_1.ContextResponse),\n    __param(3, typescript_rest_1.ContextNext), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [String, Object, Object, Function]), \n    __metadata('design:returntype', void 0)\n], TestParams.prototype, \"testContext\", null);\n__decorate([\n    typescript_rest_1.POST,\n    typescript_rest_1.Path(\"upload\"),\n    __param(0, typescript_rest_1.FileParam(\"myFile\")),\n    __param(1, typescript_rest_1.FormParam(\"myField\")), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [Object, String]), \n    __metadata('design:returntype', Boolean)\n], TestParams.prototype, \"testUploadFile\", null);\nlet AcceptTest = class AcceptTest {\n    testLanguage(language) {\n        if (language === 'en') {\n            return \"accepted\";\n        }\n        return \"aceito\";\n    }\n    testAccepts(type) {\n        if (type === 'application/json') {\n            return \"accepted\";\n        }\n        return \"not accepted\";\n    }\n    testConflict() {\n        throw new typescript_rest_1.Errors.ConflictError(\"test of conflict\");\n    }\n    testConflictAsync() {\n        return new Promise(function (resolve, reject) {\n            throw new typescript_rest_1.Errors.ConflictError(\"test of conflict\");\n        });\n    }\n};\n__decorate([\n    typescript_rest_1.GET,\n    __param(0, typescript_rest_1.ContextLanguage), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [String]), \n    __metadata('design:returntype', String)\n], AcceptTest.prototype, \"testLanguage\", null);\n__decorate([\n    typescript_rest_1.GET,\n    typescript_rest_1.Path(\"types\"),\n    typescript_rest_1.Accept(\"application/json\"),\n    __param(0, typescript_rest_1.ContextAccept), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [String]), \n    __metadata('design:returntype', String)\n], AcceptTest.prototype, \"testAccepts\", null);\n__decorate([\n    typescript_rest_1.PUT,\n    typescript_rest_1.Path(\"conflict\"), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', []), \n    __metadata('design:returntype', String)\n], AcceptTest.prototype, \"testConflict\", null);\n__decorate([\n    typescript_rest_1.POST,\n    typescript_rest_1.Path(\"conflict\"), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', []), \n    __metadata('design:returntype', Promise)\n], AcceptTest.prototype, \"testConflictAsync\", null);\nAcceptTest = __decorate([\n    typescript_rest_1.Path(\"/accept\"),\n    typescript_rest_1.AcceptLanguage(\"en\", \"pt-BR\"), \n    __metadata('design:paramtypes', [])\n], AcceptTest);\nlet app = express();\napp.set('env', 'test');\ntypescript_rest_1.Server.buildServices(app);\nlet server;\ndescribe(\"Server Tests\", () => {\n    beforeAll(function () {\n        server = app.listen(3000);\n    });\n    afterAll(function () {\n        server.close();\n    });\n    describe(\"Server\", () => {\n        it(\"should provide a catalog containing the exposed paths\", () => {\n            expect(typescript_rest_1.Server.getPaths().has(\"/person/:id\")).toEqual(true);\n            expect(typescript_rest_1.Server.getPaths().has(\"/headers\")).toEqual(true);\n            expect(typescript_rest_1.Server.getPaths().has(\"/context\")).toEqual(true);\n            expect(typescript_rest_1.Server.getPaths().has(\"/upload\")).toEqual(true);\n            expect(typescript_rest_1.Server.getHttpMethods(\"/person/:id\").has(typescript_rest_1.HttpMethod.GET)).toEqual(true);\n            expect(typescript_rest_1.Server.getHttpMethods(\"/person/:id\").has(typescript_rest_1.HttpMethod.PUT)).toEqual(true);\n            expect(typescript_rest_1.Server.getPaths().has(\"/accept\")).toEqual(true);\n            expect(typescript_rest_1.Server.getPaths().has(\"/accept/conflict\")).toEqual(true);\n        });\n    });\n    describe(\"PersonService\", () => {\n        it(\"should return the person (123) for GET on path: /person/123\", (done) => {\n            request(\"http://localhost:3000/person/123\", function (error, response, body) {\n                let result = JSON.parse(body);\n                expect(result.id).toEqual(123);\n                done();\n            });\n        });\n        it(\"should return true for PUT on path: /person/123\", (done) => {\n            request.put({\n                headers: { 'content-type': 'application/json' },\n                url: \"http://localhost:3000/person/123\",\n                body: JSON.stringify(new Person(123, \"Fulano de Tal número 123\", 35))\n            }, function (error, response, body) {\n                expect(body).toEqual(\"true\");\n                done();\n            });\n        });\n        it(\"should return the an array with 3 elements for GET on path: /person?start=0&size=3\", (done) => {\n            request(\"http://localhost:3000/person?start=0&size=3\", function (error, response, body) {\n                let result = JSON.parse(body);\n                expect(result.length).toEqual(3);\n                done();\n            });\n        });\n    });\n    describe(\"TestParams\", () => {\n        it(\"should parse header and cookies correclty\", (done) => {\n            request({\n                headers: { 'my-header': 'header value', 'Cookie': 'my-cookie=cookie value' },\n                url: \"http://localhost:3000/headers\"\n            }, function (error, response, body) {\n                expect(body).toEqual(\"cookie: cookie value|header: header value\");\n                done();\n            });\n        });\n        it(\"should accept Context parameters\", (done) => {\n            request({\n                url: \"http://localhost:3000/context?q=123\"\n            }, function (error, response, body) {\n                expect(body).toEqual(\"true\");\n                expect(response.statusCode).toEqual(201);\n                done();\n            });\n        });\n        it(\"should accept file parameters\", (done) => {\n            let req = request.post(\"http://localhost:3000/upload\", function (error, response, body) {\n                expect(body).toEqual(\"true\");\n                expect(response.statusCode).toEqual(200);\n                done();\n            });\n            let form = req.form();\n            form.append('myField', 'my_value');\n            form.append('myFile', fs.createReadStream(__dirname + '/test-rest.spec.js'), 'test-rest.spec.js');\n        });\n    });\n    describe(\"AcceptTest\", () => {\n        it(\"should choose language correctly\", (done) => {\n            request({\n                headers: { 'Accept-Language': 'pt-BR' },\n                url: \"http://localhost:3000/accept\"\n            }, function (error, response, body) {\n                expect(body).toEqual(\"aceito\");\n                done();\n            });\n        });\n        it(\"should reject unacceptable languages\", (done) => {\n            request({\n                headers: { 'Accept-Language': 'fr' },\n                url: \"http://localhost:3000/accept\"\n            }, function (error, response, body) {\n                expect(response.statusCode).toEqual(406);\n                done();\n            });\n        });\n        it(\"should use default language if none specified\", (done) => {\n            request({\n                url: \"http://localhost:3000/accept\"\n            }, function (error, response, body) {\n                expect(body).toEqual(\"accepted\");\n                done();\n            });\n        });\n        it(\"should use default media type if none specified\", (done) => {\n            request({\n                url: \"http://localhost:3000/accept/types\"\n            }, function (error, response, body) {\n                expect(body).toEqual(\"accepted\");\n                done();\n            });\n        });\n        it(\"should handle RestErrors\", (done) => {\n            request.put({\n                headers: { 'Accept': 'text/html' },\n                url: \"http://localhost:3000/accept/conflict\",\n            }, function (error, response, body) {\n                expect(response.statusCode).toEqual(409);\n                done();\n            });\n        });\n        it(\"should handle RestErrors on Async calls\", (done) => {\n            request.post({\n                headers: { 'Accept': 'text/html' },\n                url: \"http://localhost:3000/accept/conflict\",\n            }, function (error, response, body) {\n                expect(response.statusCode).toEqual(409);\n                done();\n            });\n        });\n        it(\"should reject unacceptable media types\", (done) => {\n            request({\n                headers: { 'Accept': 'text/html' },\n                url: \"http://localhost:3000/accept/types\"\n            }, function (error, response, body) {\n                expect(response.statusCode).toEqual(406);\n                done();\n            });\n        });\n    });\n});\n","/// <reference path=\"../../typings/index.d.ts\" />\n\nimport * as express from \"express\";\nimport * as request from 'request';\nimport * as fs from \"fs\";\n\nimport {Path, Server, GET, POST, PUT, DELETE, HttpMethod,\n\t\tPathParam, QueryParam, CookieParam, HeaderParam, \n\t\tFormParam, Context, ServiceContext, ContextRequest, \n\t\tContextResponse, ContextLanguage, ContextAccept, \n\t\tContextNext, AcceptLanguage, Accept, FileParam, Errors} from \"../lib/typescript-rest\";\n\nclass Person {\n\tconstructor(id: number, name: string, age: number) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\tid: number;\n\tname: string;\n\tage: number;\n}\n\n@Path(\"/person\")\nclass PersonService {\n\t@Path(\":id\")\n\t@GET\n\tgetPerson( @PathParam('id') id: number): Promise<Person> {\n\t\treturn new Promise<Person>(function(resolve, reject){\n\t\t\tresolve(new Person(id, \"Fulano de Tal número \" + id.toString(), 35));\n\t\t});\n\t}\n\n\t@PUT\n\t@Path(\"/:id\")\n\tsetPerson( person: Person): boolean {\n\t\treturn true;\n\t}\n\n\t@GET\n\tgetAll( @QueryParam('start') start: number, \n\t\t    @QueryParam('size') size: number): Person[] {\n\t\tlet result: Array<Person> = new Array<Person>();\n\n\t\tfor (let i: number = start; i < (start + size); i++) {\n\t\t\tresult.push(new Person(i, \"Fulano de Tal número \" + i.toString(), 35));\n\t\t}\n\t\treturn result;\n\t}\n}\n\nclass TestParams {\n\t\n\t@Context\n\tcontext: ServiceContext;\n\n\t@GET\n\t@Path(\"headers\")\n\ttestHeaders( @HeaderParam('my-header') header: string,\n\t\t\t\t @CookieParam('my-cookie') cookie: string): string {\n\t\treturn \"cookie: \" + cookie + \"|header: \"+header;\n\t}\n\n\t@GET\n\t@Path(\"context\")\n\ttestContext( @QueryParam('q') q: string,\n\t\t@ContextRequest request: express.Request,\n\t\t@ContextResponse response: express.Response,\n\t\t@ContextNext next: express.NextFunction): void {\n\n\t\tif (request && response && next) {\n\t\t\tresponse.status(201);\n\t\t\tif (q === \"123\") {\n\t\t\t\tresponse.send(true);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tresponse.send(false);\n\t\t\t}\n\t\t}\n\t}\n\n\t@POST\n\t@Path(\"upload\")\n\ttestUploadFile( @FileParam(\"myFile\") file: Express.Multer.File, \n\t\t\t\t\t@FormParam(\"myField\") myField: string): boolean {\n\t\treturn (file \n\t\t && (file.buffer.toString().startsWith('\"use strict\";')) \n\t     && (myField === \"my_value\"));\n\t}\n}\n\n@Path(\"/accept\")\n@AcceptLanguage(\"en\", \"pt-BR\")\nclass AcceptTest {\n\n\t@GET\n\ttestLanguage(@ContextLanguage language: string): string {\n\t\tif (language === 'en') {\n\t\t\treturn \"accepted\";\n\t\t}\n\t\treturn \"aceito\";\n\t}\n\n\t@GET\n\t@Path(\"types\")\n\t@Accept(\"application/json\")\n\ttestAccepts(@ContextAccept type: string): string {\n\t\tif (type === 'application/json') {\n\t\t\treturn \"accepted\";\n\t\t}\n\t\treturn \"not accepted\"\n\t}\n\n\t@PUT\n\t@Path(\"conflict\")\n\ttestConflict(): string {\n\t\tthrow new Errors.ConflictError(\"test of conflict\");\n\t}\n\n\n\t@POST\n\t@Path(\"conflict\")\n\ttestConflictAsync(): Promise<string> {\n\t\treturn new Promise<string>(function(resolve, reject){\n\t\t\tthrow new Errors.ConflictError(\"test of conflict\");\n\t\t});\n\t}\n}\n\nlet app: express.Application = express();\napp.set('env', 'test');\nServer.buildServices(app);\n\nlet server;\ndescribe(\"Server Tests\", () => {\n\n\tbeforeAll(function(){\n\t\tserver = app.listen(3000);\n\t});\n\n\tafterAll(function(){\n\t\tserver.close();\n\t});\n\n\tdescribe(\"Server\", () => {\n\t\tit(\"should provide a catalog containing the exposed paths\", () => {\n\t\t\texpect(Server.getPaths().has(\"/person/:id\")).toEqual(true);\n\t\t\texpect(Server.getPaths().has(\"/headers\")).toEqual(true);\n\t\t\texpect(Server.getPaths().has(\"/context\")).toEqual(true);\n\t\t\texpect(Server.getPaths().has(\"/upload\")).toEqual(true);\n\t\t\texpect(Server.getHttpMethods(\"/person/:id\").has(HttpMethod.GET)).toEqual(true);\n\t\t\texpect(Server.getHttpMethods(\"/person/:id\").has(HttpMethod.PUT)).toEqual(true);\n\t\t\texpect(Server.getPaths().has(\"/accept\")).toEqual(true);\n\t\t\texpect(Server.getPaths().has(\"/accept/conflict\")).toEqual(true);\n\t\t});\n\t});\n\n\tdescribe(\"PersonService\", () => {\n\t\tit(\"should return the person (123) for GET on path: /person/123\", (done) => {\n\t\t\trequest(\"http://localhost:3000/person/123\", function(error, response, body) {\n\t\t\t\tlet result: Person = JSON.parse(body);\n\t\t\t\texpect(result.id).toEqual(123);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\t\n\t\tit(\"should return true for PUT on path: /person/123\", (done) => {\n\t\t\trequest.put({ \n\t\t\t\theaders: { 'content-type': 'application/json' },\n\t\t\t\turl: \"http://localhost:3000/person/123\", \n\t\t\t\tbody: JSON.stringify(new Person(123, \"Fulano de Tal número 123\", 35))\n\t\t\t}, function(error, response, body) {\n\t\t\t\texpect(body).toEqual(\"true\");\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit(\"should return the an array with 3 elements for GET on path: /person?start=0&size=3\", (done) => {\n\t\t\trequest(\"http://localhost:3000/person?start=0&size=3\", function(error, response, body) {\n\t\t\t\tlet result: Array<Person> = JSON.parse(body);\n\t\t\t\texpect(result.length).toEqual(3);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe(\"TestParams\", () => {\n\t\tit(\"should parse header and cookies correclty\", (done) => {\n\t\t\trequest({\n\t\t\t\theaders: { 'my-header': 'header value', 'Cookie': 'my-cookie=cookie value' },\n\t\t\t\turl: \"http://localhost:3000/headers\"\t\t\t\t\n\t\t\t}, function(error, response, body) {\n\t\t\t\texpect(body).toEqual(\"cookie: cookie value|header: header value\");\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit(\"should accept Context parameters\", (done) => {\n\t\t\trequest({\n\t\t\t\turl: \"http://localhost:3000/context?q=123\"\n\t\t\t}, function(error, response, body) {\n\t\t\t\texpect(body).toEqual(\"true\");\n\t\t\t\texpect(response.statusCode).toEqual(201);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit(\"should accept file parameters\", (done) => {\n\t\t\tlet req = request.post(\"http://localhost:3000/upload\", function(error, response, body) {\n\t\t\t\texpect(body).toEqual(\"true\");\n\t\t\t\texpect(response.statusCode).toEqual(200);\n\t\t\t\tdone();\n\t\t\t});\n\t\t\tlet form: FormData = req.form();\n\t\t\tform.append('myField', 'my_value');\n\t\t\tform.append('myFile', fs.createReadStream(__dirname + '/test-rest.spec.js'), 'test-rest.spec.js');\n\t\t});\n\t});\n\n\tdescribe(\"AcceptTest\", () => {\n\t\tit(\"should choose language correctly\", (done) => {\n\t\t\trequest({\n\t\t\t\theaders: { 'Accept-Language': 'pt-BR' },\n\t\t\t\turl: \"http://localhost:3000/accept\"\t\t\t\t\n\t\t\t}, function(error, response, body) {\n\t\t\t\texpect(body).toEqual(\"aceito\");\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit(\"should reject unacceptable languages\", (done) => {\n\t\t\trequest({\n\t\t\t\theaders: { 'Accept-Language': 'fr' },\n\t\t\t\turl: \"http://localhost:3000/accept\"\t\t\t\t\n\t\t\t}, function(error, response, body) {\n\t\t\t\texpect(response.statusCode).toEqual(406);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit(\"should use default language if none specified\", (done) => {\n\t\t\trequest({\n\t\t\t\turl: \"http://localhost:3000/accept\"\t\t\t\t\n\t\t\t}, function(error, response, body) {\n\t\t\t\texpect(body).toEqual(\"accepted\");\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit(\"should use default media type if none specified\", (done) => {\n\t\t\trequest({\n\t\t\t\turl: \"http://localhost:3000/accept/types\"\t\t\t\t\n\t\t\t}, function(error, response, body) {\n\t\t\t\texpect(body).toEqual(\"accepted\");\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\t\tit(\"should handle RestErrors\", (done) => {\n\t\t\trequest.put({\n\t\t\t\theaders: { 'Accept': 'text/html' },\n\t\t\t\turl: \"http://localhost:3000/accept/conflict\",\t\t\t\t\n\t\t\t}, function(error, response, body) {\n\t\t\t\texpect(response.statusCode).toEqual(409);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\t\tit(\"should handle RestErrors on Async calls\", (done) => {\n\t\t\trequest.post({\n\t\t\t\theaders: { 'Accept': 'text/html' },\n\t\t\t\turl: \"http://localhost:3000/accept/conflict\",\t\t\t\t\n\t\t\t}, function(error, response, body) {\n\t\t\t\texpect(response.statusCode).toEqual(409);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\t\tit(\"should reject unacceptable media types\", (done) => {\n\t\t\trequest({\n\t\t\t\theaders: { 'Accept': 'text/html' },\n\t\t\t\turl: \"http://localhost:3000/accept/types\"\t\t\t\t\n\t\t\t}, function(error, response, body) {\n\t\t\t\texpect(response.statusCode).toEqual(406);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t});\n});\n\n"]}