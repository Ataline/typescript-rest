{"version":3,"sources":["spec/test-rest.js"],"names":[],"mappings":"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","file":"test-rest.spec.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nconst express = require(\"express\");\nconst request = require('request');\nconst fs = require(\"fs\");\nconst typescript_rest_1 = require(\"../lib/typescript-rest\");\nclass Person {\n    constructor(id, name, age) {\n        this.id = id;\n        this.name = name;\n        this.age = age;\n    }\n}\nlet PersonService = class PersonService {\n    getPerson(id) {\n        return new Promise(function (resolve, reject) {\n            resolve(new Person(id, \"Fulano de Tal número \" + id.toString(), 35));\n        });\n    }\n    setPerson(person) {\n        return true;\n    }\n    addPerson(req, person) {\n        return new typescript_rest_1.Return.NewResource(req.url + \"/\" + person.id);\n    }\n    getAll(start, size) {\n        let result = new Array();\n        for (let i = start; i < (start + size); i++) {\n            result.push(new Person(i, \"Fulano de Tal número \" + i.toString(), 35));\n        }\n        return result;\n    }\n};\n__decorate([\n    typescript_rest_1.Path(\":id\"),\n    typescript_rest_1.GET,\n    __param(0, typescript_rest_1.PathParam('id')), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [Number]), \n    __metadata('design:returntype', Promise)\n], PersonService.prototype, \"getPerson\", null);\n__decorate([\n    typescript_rest_1.PUT,\n    typescript_rest_1.Path(\"/:id\"), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [Person]), \n    __metadata('design:returntype', Boolean)\n], PersonService.prototype, \"setPerson\", null);\n__decorate([\n    typescript_rest_1.POST,\n    __param(0, typescript_rest_1.ContextRequest), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [Object, Person]), \n    __metadata('design:returntype', typescript_rest_1.Return.NewResource)\n], PersonService.prototype, \"addPerson\", null);\n__decorate([\n    typescript_rest_1.GET,\n    __param(0, typescript_rest_1.QueryParam('start')),\n    __param(1, typescript_rest_1.QueryParam('size')), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [Number, Number]), \n    __metadata('design:returntype', Array)\n], PersonService.prototype, \"getAll\", null);\nPersonService = __decorate([\n    typescript_rest_1.Path(\"/person\"), \n    __metadata('design:paramtypes', [])\n], PersonService);\nclass TestParams {\n    testHeaders(header, cookie) {\n        return \"cookie: \" + cookie + \"|header: \" + header;\n    }\n    testContext(q, request, response, next) {\n        if (request && response && next) {\n            response.status(201);\n            if (q === \"123\") {\n                response.send(true);\n            }\n            else {\n                response.send(false);\n            }\n        }\n    }\n    testUploadFile(file, myField) {\n        return (file\n            && (file.buffer.toString().startsWith('\"use strict\";'))\n            && (myField === \"my_value\"));\n    }\n}\n__decorate([\n    typescript_rest_1.Context, \n    __metadata('design:type', typescript_rest_1.ServiceContext)\n], TestParams.prototype, \"context\", void 0);\n__decorate([\n    typescript_rest_1.GET,\n    typescript_rest_1.Path(\"headers\"),\n    __param(0, typescript_rest_1.HeaderParam('my-header')),\n    __param(1, typescript_rest_1.CookieParam('my-cookie')), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [String, String]), \n    __metadata('design:returntype', String)\n], TestParams.prototype, \"testHeaders\", null);\n__decorate([\n    typescript_rest_1.GET,\n    typescript_rest_1.Path(\"context\"),\n    __param(0, typescript_rest_1.QueryParam('q')),\n    __param(1, typescript_rest_1.ContextRequest),\n    __param(2, typescript_rest_1.ContextResponse),\n    __param(3, typescript_rest_1.ContextNext), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [String, Object, Object, Function]), \n    __metadata('design:returntype', void 0)\n], TestParams.prototype, \"testContext\", null);\n__decorate([\n    typescript_rest_1.POST,\n    typescript_rest_1.Path(\"upload\"),\n    __param(0, typescript_rest_1.FileParam(\"myFile\")),\n    __param(1, typescript_rest_1.FormParam(\"myField\")), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [Object, String]), \n    __metadata('design:returntype', Boolean)\n], TestParams.prototype, \"testUploadFile\", null);\nlet AcceptTest = class AcceptTest {\n    testLanguage(language) {\n        if (language === 'en') {\n            return \"accepted\";\n        }\n        return \"aceito\";\n    }\n    testAccepts(type) {\n        if (type === 'application/json') {\n            return \"accepted\";\n        }\n        return \"not accepted\";\n    }\n    testConflict() {\n        throw new typescript_rest_1.Errors.ConflictError(\"test of conflict\");\n    }\n    testConflictAsync() {\n        return new Promise(function (resolve, reject) {\n            throw new typescript_rest_1.Errors.ConflictError(\"test of conflict\");\n        });\n    }\n};\n__decorate([\n    typescript_rest_1.GET,\n    __param(0, typescript_rest_1.ContextLanguage), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [String]), \n    __metadata('design:returntype', String)\n], AcceptTest.prototype, \"testLanguage\", null);\n__decorate([\n    typescript_rest_1.GET,\n    typescript_rest_1.Path(\"types\"),\n    typescript_rest_1.Accept(\"application/json\"),\n    __param(0, typescript_rest_1.ContextAccept), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', [String]), \n    __metadata('design:returntype', String)\n], AcceptTest.prototype, \"testAccepts\", null);\n__decorate([\n    typescript_rest_1.PUT,\n    typescript_rest_1.Path(\"conflict\"), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', []), \n    __metadata('design:returntype', String)\n], AcceptTest.prototype, \"testConflict\", null);\n__decorate([\n    typescript_rest_1.POST,\n    typescript_rest_1.Path(\"conflict\"), \n    __metadata('design:type', Function), \n    __metadata('design:paramtypes', []), \n    __metadata('design:returntype', Promise)\n], AcceptTest.prototype, \"testConflictAsync\", null);\nAcceptTest = __decorate([\n    typescript_rest_1.Path(\"/accept\"),\n    typescript_rest_1.AcceptLanguage(\"en\", \"pt-BR\"), \n    __metadata('design:paramtypes', [])\n], AcceptTest);\nlet app = express();\napp.set('env', 'test');\ntypescript_rest_1.Server.buildServices(app);\nlet server;\ndescribe(\"Server Tests\", () => {\n    beforeAll(function () {\n        server = app.listen(3000);\n    });\n    afterAll(function () {\n        server.close();\n    });\n    describe(\"Server\", () => {\n        it(\"should provide a catalog containing the exposed paths\", () => {\n            expect(typescript_rest_1.Server.getPaths().indexOf(\"/person/:id\")).toBeGreaterThan(-1);\n            expect(typescript_rest_1.Server.getPaths().indexOf(\"/headers\")).toBeGreaterThan(-1);\n            expect(typescript_rest_1.Server.getPaths().indexOf(\"/context\")).toBeGreaterThan(-1);\n            expect(typescript_rest_1.Server.getPaths().indexOf(\"/upload\")).toBeGreaterThan(-1);\n            expect(typescript_rest_1.Server.getHttpMethods(\"/person/:id\").indexOf(typescript_rest_1.HttpMethod.GET)).toBeGreaterThan(-1);\n            expect(typescript_rest_1.Server.getHttpMethods(\"/person/:id\").indexOf(typescript_rest_1.HttpMethod.PUT)).toBeGreaterThan(-1);\n            expect(typescript_rest_1.Server.getPaths().indexOf(\"/accept\")).toBeGreaterThan(-1);\n            expect(typescript_rest_1.Server.getPaths().indexOf(\"/accept/conflict\")).toBeGreaterThan(-1);\n        });\n    });\n    describe(\"PersonService\", () => {\n        it(\"should return the person (123) for GET on path: /person/123\", (done) => {\n            request(\"http://localhost:3000/person/123\", function (error, response, body) {\n                let result = JSON.parse(body);\n                expect(result.id).toEqual(123);\n                done();\n            });\n        });\n        it(\"should return true for PUT on path: /person/123\", (done) => {\n            request.put({\n                headers: { 'content-type': 'application/json' },\n                url: \"http://localhost:3000/person/123\",\n                body: JSON.stringify(new Person(123, \"Fulano de Tal número 123\", 35))\n            }, function (error, response, body) {\n                expect(body).toEqual(\"true\");\n                done();\n            });\n        });\n        it(\"should return 201 for POST on path: /person\", (done) => {\n            request.post({\n                headers: { 'content-type': 'application/json' },\n                url: \"http://localhost:3000/person\",\n                body: JSON.stringify(new Person(123, \"Fulano de Tal número 123\", 35))\n            }, function (error, response, body) {\n                expect(response.statusCode).toEqual(201);\n                expect(response.headers['location']).toEqual(\"/person/123\");\n                done();\n            });\n        });\n        it(\"should return an array with 3 elements for GET on path: /person?start=0&size=3\", (done) => {\n            request(\"http://localhost:3000/person?start=0&size=3\", function (error, response, body) {\n                let result = JSON.parse(body);\n                expect(result.length).toEqual(3);\n                done();\n            });\n        });\n    });\n    describe(\"TestParams\", () => {\n        it(\"should parse header and cookies correclty\", (done) => {\n            request({\n                headers: { 'my-header': 'header value', 'Cookie': 'my-cookie=cookie value' },\n                url: \"http://localhost:3000/headers\"\n            }, function (error, response, body) {\n                expect(body).toEqual(\"cookie: cookie value|header: header value\");\n                done();\n            });\n        });\n        it(\"should accept Context parameters\", (done) => {\n            request({\n                url: \"http://localhost:3000/context?q=123\"\n            }, function (error, response, body) {\n                expect(body).toEqual(\"true\");\n                expect(response.statusCode).toEqual(201);\n                done();\n            });\n        });\n        it(\"should accept file parameters\", (done) => {\n            let req = request.post(\"http://localhost:3000/upload\", function (error, response, body) {\n                expect(body).toEqual(\"true\");\n                expect(response.statusCode).toEqual(200);\n                done();\n            });\n            let form = req.form();\n            form.append('myField', 'my_value');\n            form.append('myFile', fs.createReadStream(__dirname + '/test-rest.spec.js'), 'test-rest.spec.js');\n        });\n    });\n    describe(\"AcceptTest\", () => {\n        it(\"should choose language correctly\", (done) => {\n            request({\n                headers: { 'Accept-Language': 'pt-BR' },\n                url: \"http://localhost:3000/accept\"\n            }, function (error, response, body) {\n                expect(body).toEqual(\"aceito\");\n                done();\n            });\n        });\n        it(\"should reject unacceptable languages\", (done) => {\n            request({\n                headers: { 'Accept-Language': 'fr' },\n                url: \"http://localhost:3000/accept\"\n            }, function (error, response, body) {\n                expect(response.statusCode).toEqual(406);\n                done();\n            });\n        });\n        it(\"should use default language if none specified\", (done) => {\n            request({\n                url: \"http://localhost:3000/accept\"\n            }, function (error, response, body) {\n                expect(body).toEqual(\"accepted\");\n                done();\n            });\n        });\n        it(\"should use default media type if none specified\", (done) => {\n            request({\n                url: \"http://localhost:3000/accept/types\"\n            }, function (error, response, body) {\n                expect(body).toEqual(\"accepted\");\n                done();\n            });\n        });\n        it(\"should handle RestErrors\", (done) => {\n            request.put({\n                headers: { 'Accept': 'text/html' },\n                url: \"http://localhost:3000/accept/conflict\",\n            }, function (error, response, body) {\n                expect(response.statusCode).toEqual(409);\n                done();\n            });\n        });\n        it(\"should handle RestErrors on Async calls\", (done) => {\n            request.post({\n                headers: { 'Accept': 'text/html' },\n                url: \"http://localhost:3000/accept/conflict\",\n            }, function (error, response, body) {\n                expect(response.statusCode).toEqual(409);\n                done();\n            });\n        });\n        it(\"should reject unacceptable media types\", (done) => {\n            request({\n                headers: { 'Accept': 'text/html' },\n                url: \"http://localhost:3000/accept/types\"\n            }, function (error, response, body) {\n                expect(response.statusCode).toEqual(406);\n                done();\n            });\n        });\n    });\n    describe(\"Server\", () => {\n        it(\"should return 404 when unmapped resources are requested\", (done) => {\n            request({\n                url: \"http://localhost:3000/unmapped/resource\"\n            }, function (error, response, body) {\n                expect(response.statusCode).toEqual(404);\n                done();\n            });\n        });\n        it(\"should return 405 when a not supported method is requeted to a mapped resource\", (done) => {\n            request.post({\n                url: \"http://localhost:3000/person/123\"\n            }, function (error, response, body) {\n                expect(response.statusCode).toEqual(405);\n                let allowed = response.headers['allow'];\n                expect(allowed).toContain(\"GET\");\n                expect(allowed).toContain(\"PUT\");\n                done();\n            });\n        });\n    });\n});\n"]}