{"version":3,"sources":["lib/decorators.js"],"names":["_getMetadata","require","_getMetadata2","_interopRequireDefault","_typeof2","_typeof3","obj","__esModule","default","server_container_1","server_types_1","metadata","Path","path","arguments","length","PathTypeDecorator","apply","undefined","PathMethodDecorator","Error","exports","AcceptLanguage","_len","languages","Array","_key","AcceptLanguageTypeDecorator","AcceptLanguageMethodDecorator","Accept","_len2","accepts","_key2","AcceptTypeDecorator","AcceptMethodDecorator","Context","_len3","args","_key3","newArgs","concat","ParamType","context","processDecoratedProperty","_newArgs","processDecoratedParameter","ContextRequest","_len4","_key4","context_request","_newArgs2","ContextResponse","_len5","_key5","context_response","_newArgs3","ContextNext","_len6","_key6","context_next","_newArgs4","ContextLanguage","_len7","_key7","context_accept_language","_newArgs5","ContextAccept","_len8","_key8","context_accept","_newArgs6","GET","target","propertyKey","descriptor","processHttpVerb","HttpMethod","POST","PUT","DELETE","HEAD","OPTIONS","PATCH","PathParam","name","parameterIndex","FileParam","file","FilesParam","files","QueryParam","query","HeaderParam","header","CookieParam","cookie","FormParam","form","classData","InternalServer","registerServiceClass","serviceMethod","registerServiceMethod","paramType","constructor","paramTypes","parameters","push","MethodParam","body","key","addProperty","httpMethod","processServiceMethod","forEach","param","mustParseCookies","mustParseBody","mustParseForms"],"mappings":"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","file":"decorators.js","sourcesContent":["\"use strict\";\nconst server_container_1 = require(\"./server-container\");\nconst server_types_1 = require(\"./server-types\");\nconst metadata = require(\"./metadata\");\nrequire(\"reflect-metadata\");\nfunction Path(path) {\n    return function (...args) {\n        if (args.length == 1) {\n            return PathTypeDecorator.apply(this, [args[0], path]);\n        }\n        else if (args.length == 3 && typeof args[2] === \"object\") {\n            return PathMethodDecorator.apply(this, [args[0], args[1], args[2], path]);\n        }\n        throw new Error(\"Invalid @Path Decorator declaration.\");\n    };\n}\nexports.Path = Path;\nfunction AcceptLanguage(...languages) {\n    return function (...args) {\n        if (args.length == 1) {\n            return AcceptLanguageTypeDecorator.apply(this, [args[0], languages]);\n        }\n        else if (args.length == 3 && typeof args[2] === \"object\") {\n            return AcceptLanguageMethodDecorator.apply(this, [args[0], args[1], args[2], languages]);\n        }\n        throw new Error(\"Invalid @AcceptLanguage Decorator declaration.\");\n    };\n}\nexports.AcceptLanguage = AcceptLanguage;\nfunction Accept(...accepts) {\n    return function (...args) {\n        if (args.length == 1) {\n            return AcceptTypeDecorator.apply(this, [args[0], accepts]);\n        }\n        else if (args.length == 3 && typeof args[2] === \"object\") {\n            return AcceptMethodDecorator.apply(this, [args[0], args[1], args[2], accepts]);\n        }\n        throw new Error(\"Invalid @Accept Decorator declaration.\");\n    };\n}\nexports.Accept = Accept;\nfunction Context(...args) {\n    if (args.length == 2) {\n        let newArgs = args.concat([metadata.ParamType.context]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n        let newArgs = args.concat([metadata.ParamType.context, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n    throw new Error(\"Invalid @Context Decorator declaration.\");\n}\nexports.Context = Context;\nfunction ContextRequest(...args) {\n    if (args.length == 2) {\n        let newArgs = args.concat([metadata.ParamType.context_request]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n        let newArgs = args.concat([metadata.ParamType.context_request, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n    throw new Error(\"Invalid @ContextRequest Decorator declaration.\");\n}\nexports.ContextRequest = ContextRequest;\nfunction ContextResponse(...args) {\n    if (args.length == 2) {\n        let newArgs = args.concat([metadata.ParamType.context_response]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n        let newArgs = args.concat([metadata.ParamType.context_response, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n    throw new Error(\"Invalid @ContextResponse Decorator declaration.\");\n}\nexports.ContextResponse = ContextResponse;\nfunction ContextNext(...args) {\n    if (args.length == 2) {\n        let newArgs = args.concat([metadata.ParamType.context_next]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n        let newArgs = args.concat([metadata.ParamType.context_next, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n    throw new Error(\"Invalid @ContextNext Decorator declaration.\");\n}\nexports.ContextNext = ContextNext;\nfunction ContextLanguage(...args) {\n    if (args.length == 2) {\n        let newArgs = args.concat([metadata.ParamType.context_accept_language]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n        let newArgs = args.concat([metadata.ParamType.context_accept_language, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n    throw new Error(\"Invalid @ContextLanguage Decorator declaration.\");\n}\nexports.ContextLanguage = ContextLanguage;\nfunction ContextAccept(...args) {\n    if (args.length == 2) {\n        let newArgs = args.concat([metadata.ParamType.context_accept]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n        let newArgs = args.concat([metadata.ParamType.context_accept, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n    throw new Error(\"Invalid @ContextAccept Decorator declaration.\");\n}\nexports.ContextAccept = ContextAccept;\nfunction GET(target, propertyKey, descriptor) {\n    processHttpVerb(target, propertyKey, server_types_1.HttpMethod.GET);\n}\nexports.GET = GET;\nfunction POST(target, propertyKey, descriptor) {\n    processHttpVerb(target, propertyKey, server_types_1.HttpMethod.POST);\n}\nexports.POST = POST;\nfunction PUT(target, propertyKey, descriptor) {\n    processHttpVerb(target, propertyKey, server_types_1.HttpMethod.PUT);\n}\nexports.PUT = PUT;\nfunction DELETE(target, propertyKey, descriptor) {\n    processHttpVerb(target, propertyKey, server_types_1.HttpMethod.DELETE);\n}\nexports.DELETE = DELETE;\nfunction HEAD(target, propertyKey, descriptor) {\n    processHttpVerb(target, propertyKey, server_types_1.HttpMethod.HEAD);\n}\nexports.HEAD = HEAD;\nfunction OPTIONS(target, propertyKey, descriptor) {\n    processHttpVerb(target, propertyKey, server_types_1.HttpMethod.OPTIONS);\n}\nexports.OPTIONS = OPTIONS;\nfunction PATCH(target, propertyKey, descriptor) {\n    processHttpVerb(target, propertyKey, server_types_1.HttpMethod.PATCH);\n}\nexports.PATCH = PATCH;\nfunction PathParam(name) {\n    return function (target, propertyKey, parameterIndex) {\n        processDecoratedParameter(target, propertyKey, parameterIndex, metadata.ParamType.path, name);\n    };\n}\nexports.PathParam = PathParam;\nfunction FileParam(name) {\n    return function (target, propertyKey, parameterIndex) {\n        processDecoratedParameter(target, propertyKey, parameterIndex, metadata.ParamType.file, name);\n    };\n}\nexports.FileParam = FileParam;\nfunction FilesParam(name) {\n    return function (target, propertyKey, parameterIndex) {\n        processDecoratedParameter(target, propertyKey, parameterIndex, metadata.ParamType.files, name);\n    };\n}\nexports.FilesParam = FilesParam;\nfunction QueryParam(name) {\n    return function (target, propertyKey, parameterIndex) {\n        processDecoratedParameter(target, propertyKey, parameterIndex, metadata.ParamType.query, name);\n    };\n}\nexports.QueryParam = QueryParam;\nfunction HeaderParam(name) {\n    return function (target, propertyKey, parameterIndex) {\n        processDecoratedParameter(target, propertyKey, parameterIndex, metadata.ParamType.header, name);\n    };\n}\nexports.HeaderParam = HeaderParam;\nfunction CookieParam(name) {\n    return function (target, propertyKey, parameterIndex) {\n        processDecoratedParameter(target, propertyKey, parameterIndex, metadata.ParamType.cookie, name);\n    };\n}\nexports.CookieParam = CookieParam;\nfunction FormParam(name) {\n    return function (target, propertyKey, parameterIndex) {\n        processDecoratedParameter(target, propertyKey, parameterIndex, metadata.ParamType.form, name);\n    };\n}\nexports.FormParam = FormParam;\nfunction AcceptLanguageTypeDecorator(target, languages) {\n    let classData = server_container_1.InternalServer.registerServiceClass(target);\n    classData.languages = languages;\n}\nfunction AcceptLanguageMethodDecorator(target, propertyKey, descriptor, languages) {\n    let serviceMethod = server_container_1.InternalServer.registerServiceMethod(target, propertyKey);\n    if (serviceMethod) {\n        serviceMethod.languages = languages;\n    }\n}\nfunction AcceptTypeDecorator(target, accepts) {\n    let classData = server_container_1.InternalServer.registerServiceClass(target);\n    classData.accepts = accepts;\n}\nfunction AcceptMethodDecorator(target, propertyKey, descriptor, accepts) {\n    let serviceMethod = server_container_1.InternalServer.registerServiceMethod(target, propertyKey);\n    if (serviceMethod) {\n        serviceMethod.accepts = accepts;\n    }\n}\nfunction PathTypeDecorator(target, path) {\n    let classData = server_container_1.InternalServer.registerServiceClass(target);\n    classData.path = path;\n}\nfunction PathMethodDecorator(target, propertyKey, descriptor, path) {\n    let serviceMethod = server_container_1.InternalServer.registerServiceMethod(target, propertyKey);\n    if (serviceMethod) {\n        serviceMethod.path = path;\n    }\n}\nfunction processDecoratedParameter(target, propertyKey, parameterIndex, paramType, name) {\n    let serviceMethod = server_container_1.InternalServer.registerServiceMethod(target.constructor, propertyKey);\n    if (serviceMethod) {\n        let paramTypes = Reflect.getMetadata(\"design:paramtypes\", target, propertyKey);\n        while (serviceMethod.parameters.length < paramTypes.length) {\n            serviceMethod.parameters.push(new metadata.MethodParam(null, paramTypes[serviceMethod.parameters.length], metadata.ParamType.body));\n        }\n        serviceMethod.parameters[parameterIndex] = new metadata.MethodParam(name, paramTypes[parameterIndex], paramType);\n    }\n}\nfunction processDecoratedProperty(target, key, paramType) {\n    let classData = server_container_1.InternalServer.registerServiceClass(target.constructor);\n    classData.addProperty(key, paramType);\n}\nfunction processHttpVerb(target, propertyKey, httpMethod) {\n    let serviceMethod = server_container_1.InternalServer.registerServiceMethod(target, propertyKey);\n    if (serviceMethod) {\n        if (serviceMethod.httpMethod) {\n            throw new Error(\"Method is already annotated with @\" +\n                serviceMethod.httpMethod +\n                \". You can only map a method to one HTTP verb.\");\n        }\n        serviceMethod.httpMethod = httpMethod;\n        processServiceMethod(target, propertyKey, serviceMethod);\n    }\n}\nfunction processServiceMethod(target, propertyKey, serviceMethod) {\n    serviceMethod.name = propertyKey;\n    let paramTypes = Reflect.getMetadata(\"design:paramtypes\", target, propertyKey);\n    while (paramTypes.length > serviceMethod.parameters.length) {\n        serviceMethod.parameters.push(new metadata.MethodParam(null, paramTypes[serviceMethod.parameters.length], metadata.ParamType.body));\n    }\n    serviceMethod.parameters.forEach(param => {\n        if (param.paramType == metadata.ParamType.cookie) {\n            serviceMethod.mustParseCookies = true;\n        }\n        else if (param.paramType == metadata.ParamType.file) {\n            serviceMethod.files.push(new metadata.FileParam(param.name, true));\n        }\n        else if (param.paramType == metadata.ParamType.files) {\n            serviceMethod.files.push(new metadata.FileParam(param.name, false));\n        }\n        else if (param.paramType == metadata.ParamType.form) {\n            if (serviceMethod.mustParseBody) {\n                throw Error(\"Can not use form parameters with a body parameter on the same method.\");\n            }\n            serviceMethod.mustParseForms = true;\n        }\n        else if (param.paramType == metadata.ParamType.body) {\n            if (serviceMethod.mustParseForms) {\n                throw Error(\"Can not use form parameters with a body parameter on the same method.\");\n            }\n            if (serviceMethod.mustParseBody) {\n                throw Error(\"Can not use more than one body parameter on the same method.\");\n            }\n            serviceMethod.mustParseBody = true;\n        }\n    });\n}\n"]}