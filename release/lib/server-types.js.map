{"version":3,"sources":["server-types.ts"],"names":[],"mappings":"AACA,YAAY,CAAC;;;;;;AAOb,WAAY,UAAU;IACrB,yCAAG,CAAA;IACH,2CAAI,CAAA;IACJ,yCAAG,CAAA;IACH,+CAAM,CAAA;IACN,2CAAI,CAAA;IACJ,iDAAO,CAAA;IACP,6CAAK,CAAA;AACN,CAAC,EARW,kBAAU,KAAV,kBAAU,QAQrB;AARD,IAAY,UAAU,GAAV,kBAQX,CAAA;AAKD;IAAA;IAsBA,CAAC;IAAD,qBAAC;AAAD,CAtBA,AAsBC,IAAA;AAtBY,sBAAc,iBAsB1B,CAAA;AAKD;IAAwC,6BAAK;IAC3C,mBAAY,IAAY,EACZ,UAAkB,EAClB,OAAgB;QAC1B,kBAAM,OAAO,CAAC,CAAC;QAFL,eAAU,GAAV,UAAU,CAAQ;QAClB,YAAO,GAAP,OAAO,CAAS;QAE1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,CAAO,IAAI,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC;IACzC,CAAC;IACH,gBAAC;AAAD,CARA,AAQC,CARuC,KAAK,GAQ5C;AARqB,iBAAS,YAQ9B,CAAA;AAKD;IAMC,4BAAmB,QAAgB,EAAS,UAAkB;QAA3C,aAAQ,GAAR,QAAQ,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAQ;IAAG,CAAC;IACnE,yBAAC;AAAD,CAPA,AAOC,IAAA;AAPqB,0BAAkB,qBAOvC,CAAA","file":"server-types.js","sourcesContent":["/// <reference path=\"../../typings/index.d.ts\" />\n\"use strict\";\n\nimport * as express from \"express\"; \n\n/**\n * The supported HTTP methods.\n */\nexport enum HttpMethod {\n\tGET,\n\tPOST,\n\tPUT,\n\tDELETE,\n\tHEAD,\n\tOPTIONS,\n\tPATCH\n}\n\n/**\n * Represents the current context of the request being handled.\n */\nexport class ServiceContext {\n\t/**\n\t * The resolved language to be used in the current request handling. \n\t */\n\tlanguage: string;\n\t/**\n\t * The preferred media type to be used in the current request handling. \n\t */\n\taccept: string;\n\t/**\n\t * The request object. \n\t */\n\trequest: express.Request;\n\t/**\n\t * The response object \n\t */\n\tresponse: express.Response; \n\t/**\n\t * The next function. It can be used to delegate to the next middleware\n\t * registered the processing of the current request. \n\t */\n\tnext: express.NextFunction;\n}\n\n/**\n * The Base class for all HTTP errors\n */\nexport abstract class HttpError extends Error {\n  constructor(name: string, \n  \t\t\t  public statusCode: number, \n  \t\t\t  public message?: string) {\n    super(message);\n    this.name = name;\n    this.stack = (<any> new Error()).stack;\n  }\n}\n\n/**\n * Used to create a reference to a resource.\n */\nexport abstract class ReferencedResource {\n\t/**\n\t * Constructor. Receives the location of the resource.\n\t * @param location To be added to the Location header on response\n\t * @param statusCode the response status code to be sent\n\t */\n\tconstructor(public location: string, public statusCode: number) {}\n}\n"]}