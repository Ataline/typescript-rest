{"version":3,"sources":["typescript-rest.ts"],"names":[],"mappings":"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","file":"typescript-rest.js","sourcesContent":["/// <reference path=\"../typings/index.d.ts\" />\n\"use strict\";\n\nimport * as express from \"express\"; \nimport * as bodyParser from \"body-parser\"; \nimport * as cookieParser from \"cookie-parser\";\nimport * as multer from \"multer\";\n\nimport \"reflect-metadata\"\n\n/**\n * A decorator to tell the [[Server]] that a class or a method \n * should be bound to a given path.\n * \n * For example:\n *\n * ```\n * @ Path(\"people\")\n * class PeopleService {\n *   @ PUT\n *   @ Path(\":id\")\n *   savePerson(person:Person) {\n *      // ...\n *   }\n * \n *   @ GET\n *   @ Path(\":id\")\n *   getPerson():Person {\n *      // ...\n *   }\n * }\n * ```\n *\n * Will create services that listen for requests like:\n *\n * ```\n * PUT http://mydomain/people/123 or\n * GET http://mydomain/people/123 \n * ```\n */\nexport function Path(path: string) {\n    return function (...args: any[]) {\n\t    if (args.length == 1) {\n\t        return PathTypeDecorator.apply(this, [args[0], path]);\n\t    }\n\t    else if (args.length == 3 && typeof args[2] === \"object\") {\n\t        return PathMethodDecorator.apply(this, [args[0], args[1], args[2], path]);\n\t    }\n\n\t    throw new Error(\"Invalid @Path Decorator declaration.\");\n\t}\n}\n\nexport function AcceptLanguage(...languages: string[]) {\n    return function (...args: any[]) {\n\t    if (args.length == 1) {\n\t        return AcceptLanguageTypeDecorator.apply(this, [args[0], languages]);\n\t    }\n\t    else if (args.length == 3 && typeof args[2] === \"object\") {\n\t        return AcceptLanguageMethodDecorator.apply(this, [args[0], args[1], args[2], languages]);\n\t    }\n\n\t    throw new Error(\"Invalid @AcceptLanguage Decorator declaration.\");\n\t}\n}\n\nexport function Accept(...accepts: string[]) {\n    return function (...args: any[]) {\n\t    if (args.length == 1) {\n\t        return AcceptTypeDecorator.apply(this, [args[0], accepts]);\n\t    }\n\t    else if (args.length == 3 && typeof args[2] === \"object\") {\n\t        return AcceptMethodDecorator.apply(this, [args[0], args[1], args[2], accepts]);\n\t    }\n\n\t    throw new Error(\"Invalid @Accept Decorator declaration.\");\n\t}\n}\n\nexport function Context(...args: any[]) {\n    if (args.length == 2) {\n    \tlet newArgs = args.concat([ParamType.context]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n    \tlet newArgs = args.concat([ParamType.context, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n\n    throw new Error(\"Invalid @Context Decorator declaration.\");\t\n}\n\nexport function ContextRequest(...args: any[]) {\n    if (args.length == 2) {\n    \tlet newArgs = args.concat([ParamType.context_request]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n    \tlet newArgs = args.concat([ParamType.context_request, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n\n    throw new Error(\"Invalid @Context Decorator declaration.\");\t\n}\n\nexport function ContextResponse(...args: any[]) {\n    if (args.length == 2) {\n    \tlet newArgs = args.concat([ParamType.context_response]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n    \tlet newArgs = args.concat([ParamType.context_response, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n\n    throw new Error(\"Invalid @Context Decorator declaration.\");\t\n}\n\nexport function ContextNext(...args: any[]) {\n    if (args.length == 2) {\n    \tlet newArgs = args.concat([ParamType.context_next]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n    \tlet newArgs = args.concat([ParamType.context_next, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n\n    throw new Error(\"Invalid @Context Decorator declaration.\");\t\n}\n\nexport function ContextLanguage(...args: any[]) {\n    if (args.length == 2) {\n    \tlet newArgs = args.concat([ParamType.context_accept_language]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n    \tlet newArgs = args.concat([ParamType.context_accept_language, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n\n    throw new Error(\"Invalid @Context Decorator declaration.\");\t\n}\n\nexport function ContextAccepts(...args: any[]) {\n    if (args.length == 2) {\n    \tlet newArgs = args.concat([ParamType.context_accept]);\n        return processDecoratedProperty.apply(this, newArgs);\n    }\n    else if (args.length == 3 && typeof args[2] === \"number\") {\n    \tlet newArgs = args.concat([ParamType.context_accept, null]);\n        return processDecoratedParameter.apply(this, newArgs);\n    }\n\n    throw new Error(\"Invalid @Context Decorator declaration.\");\t\n}\n\nexport function GET(target: any, propertyKey: string,\n\tdescriptor: PropertyDescriptor){\n    processHttpVerb(target, propertyKey, HttpMethod.GET);\n}\n\nexport function POST(target: any, propertyKey: string,\n\tdescriptor: PropertyDescriptor) {\n    processHttpVerb(target, propertyKey, HttpMethod.POST);\n}\n\nexport function PUT(target: any, propertyKey: string,\n\tdescriptor: PropertyDescriptor) {\n    processHttpVerb(target, propertyKey, HttpMethod.PUT);\n}\n\nexport function DELETE(target: any, propertyKey: string,\n\tdescriptor: PropertyDescriptor) {\n    processHttpVerb(target, propertyKey, HttpMethod.DELETE);\n}\n\nexport function HEAD(target: any, propertyKey: string,\n\tdescriptor: PropertyDescriptor) {\n    processHttpVerb(target, propertyKey, HttpMethod.HEAD);\n}\n\nexport function OPTIONS(target: any, propertyKey: string,\n\tdescriptor: PropertyDescriptor) {\n    processHttpVerb(target, propertyKey, HttpMethod.OPTIONS);\n}\n\nexport function PATCH(target: any, propertyKey: string,\n\tdescriptor: PropertyDescriptor) {\n    processHttpVerb(target, propertyKey, HttpMethod.PATCH);\n}\n\nexport function PathParam(name: string) {\n    return function(target: Object, propertyKey: string, parameterIndex: number) {\n\t\tprocessDecoratedParameter(target, propertyKey, parameterIndex, ParamType.path, name);\n\t}\n}\n\nexport function FileParam(name: string) {\n    return function(target: Object, propertyKey: string, parameterIndex: number) {\n\t\tprocessDecoratedParameter(target, propertyKey, parameterIndex, ParamType.file, name);\n\t}\n}\n\nexport function FilesParam(name: string) {\n    return function(target: Object, propertyKey: string, parameterIndex: number) {\n\t\tprocessDecoratedParameter(target, propertyKey, parameterIndex, ParamType.files, name);\n\t}\n}\n\nexport function QueryParam(name: string) {\n    return function(target: Object, propertyKey: string, parameterIndex: number) {\n\t\tprocessDecoratedParameter(target, propertyKey, parameterIndex, ParamType.query, name);\n\t}\n}\n\nexport function HeaderParam(name: string) {\n    return function(target: Object, propertyKey: string, parameterIndex: number) {\n\t\tprocessDecoratedParameter(target, propertyKey, parameterIndex, ParamType.header, name);\n\t}\n}\n\nexport function CookieParam(name: string) {\n    return function(target: Object, propertyKey: string, parameterIndex: number) {\n\t\tprocessDecoratedParameter(target, propertyKey, parameterIndex, ParamType.cookie, name);\n\t}\n}\n\nexport function FormParam(name: string) {\n    return function(target: Object, propertyKey: string, parameterIndex: number) {\n\t\tprocessDecoratedParameter(target, propertyKey, parameterIndex, ParamType.form, name);\n\t}\n}\n\nexport class ServiceContext {\n\tlanguage: string;\n\tpreferredMedia: string;\n\trequest: express.Request;\n\tresponse: express.Response; \n\tnext: express.NextFunction;\n}\n\nexport enum HttpMethod {\n\tGET,\n\tPOST,\n\tPUT,\n\tDELETE,\n\tHEAD,\n\tOPTIONS,\n\tPATCH\n}\n\nexport abstract class Server {\n\tstatic buildServices(router: express.Router) {\n\t\tlet iternalServer: InternalServer = new InternalServer(router);\n\t\titernalServer.buildServices();\n\t}\n\n\t/**\n\t * Return all paths accepted by the Server\n\t */\n\tstatic getPaths(): Set<string> {\n\t\treturn InternalServer.getPaths();\n\t}\n\n\t/**\n\t * Return the set oh HTTP verbs configured for the given path\n\t * @param path The path to search HTTP verbs\n\t */\n\tstatic getHttpMethods(path: string): Set<HttpMethod> {\n\t\treturn InternalServer.getHttpMethods(path);\n\t}\n\n\t/**\n\t * A string used for signing cookies. This is optional and if not specified, \n\t * will not parse signed cookies.\n\t * @param secret the secret used to sign\n\t */\n\tstatic setCookiesSecret(secret: string) {\n\t\tInternalServer.cookiesSecret = secret;\n\t}\n\n\t/**\n\t * Specifies a function that will be used to decode a cookie's value. \n\t * This function can be used to decode a previously-encoded cookie value \n\t * into a JavaScript string.\n\t * The default function is the global decodeURIComponent, which will decode \n\t * any URL-encoded sequences into their byte representations.\n\t * \n\t * NOTE: if an error is thrown from this function, the original, non-decoded \n\t * cookie value will be returned as the cookie's value.\n\t * @param decoder The decoder function\n\t */\n\tstatic setCookiesDecoder(decoder: (val: string) => string) {\n\t\tInternalServer.cookiesDecoder = decoder;\n\t}\n\n\t/**\n\t * Set where to store the uploaded files\n\t * @param dest Destination folder\n\t */\n\tstatic setFileDest(dest: string) {\n\t\tInternalServer.fileDest = dest;\n\t}\n\n\t/**\n\t * Set a Function to control which files are accepted to upload\n\t * @param filter The filter function\n\t */\n\tstatic setFileFilter(filter: (req: Express.Request, file: Express.Multer.File, \n\t\t\t\t\tcallback: (error: Error, acceptFile: boolean) => void) => void) {\n\t\tInternalServer.fileFilter = filter;\n\t}\n\n\t/**\n\t * Set the limits of uploaded data\n\t * @param limit The data limit\n\t */\n\tstatic setFileLimits(limit: number) {\n\t\tInternalServer.fileLimits = limit;\n\t}\n}\n\n/**\n * Decorator processor for [[AcceptLanguage]] decorator on classes\n */\nfunction AcceptLanguageTypeDecorator(target: Function, languages: string[]) {\n\tlet classData: ServiceClass = InternalServer.registerServiceClass(target);\n\tclassData.languages = languages;\n}\n\n/**\n * Decorator processor for [[AcceptLanguage]] decorator on methods\n */\nfunction AcceptLanguageMethodDecorator(target: any, propertyKey: string, \n\t\t\tdescriptor: PropertyDescriptor, languages: string[]) {\n\tlet serviceMethod: ServiceMethod = InternalServer.registerServiceMethod(target, propertyKey);\n    if (serviceMethod) { // does not intercept constructor\n\t\tserviceMethod.languages = languages;\n    }\n}\n\n/**\n * Decorator processor for [[Accept]] decorator on classes\n */\nfunction AcceptTypeDecorator(target: Function, accepts: string[]) {\n\tlet classData: ServiceClass = InternalServer.registerServiceClass(target);\n\tclassData.accepts = accepts;\n}\n\n/**\n * Decorator processor for [[Accept]] decorator on methods\n */\nfunction AcceptMethodDecorator(target: any, propertyKey: string, \n\t\t\tdescriptor: PropertyDescriptor, accepts: string[]) {\n\tlet serviceMethod: ServiceMethod = InternalServer.registerServiceMethod(target, propertyKey);\n    if (serviceMethod) { // does not intercept constructor\n\t\tserviceMethod.accepts = accepts;\n    }\n}\n\n/**\n * Decorator processor for [[Path]] decorator on classes\n */\nfunction PathTypeDecorator(target: Function, path: string) {\n\tlet classData: ServiceClass = InternalServer.registerServiceClass(target);\n\tclassData.path = path;\n}\n\n/**\n * Decorator processor for [[Path]] decorator on methods\n */\nfunction PathMethodDecorator(target: any, propertyKey: string, \n\t\t\tdescriptor: PropertyDescriptor, path: string) {\n\tlet serviceMethod: ServiceMethod = InternalServer.registerServiceMethod(target, propertyKey);\n    if (serviceMethod) { // does not intercept constructor\n\t\tserviceMethod.path = path;\n    }\n}\n\n/**\n * Decorator processor for parameter annotations on methods\n */\nfunction processDecoratedParameter(target: Object, propertyKey: string, parameterIndex: number, \n\tparamType: ParamType, name: string) {\n\tlet serviceMethod: ServiceMethod = InternalServer.registerServiceMethod(target.constructor, propertyKey);\n\tif (serviceMethod) { // does not intercept constructor\n\t\tlet paramTypes = Reflect.getMetadata(\"design:paramtypes\", target, propertyKey);\n\n\t\twhile (serviceMethod.parameters.length < paramTypes.length) {\n\t\t\tserviceMethod.parameters.push(new MethodParam(null, \n\t\t\t\t\t\tparamTypes[serviceMethod.parameters.length], ParamType.body));\n\t\t}\n\t\tserviceMethod.parameters[parameterIndex] = new MethodParam(name, paramTypes[parameterIndex], paramType);\n\t}\n}\n\n/**\n * Decorator processor for annotations on properties\n */\nfunction processDecoratedProperty(target: Function, key: string, paramType: ParamType) {\n\tlet classData: ServiceClass = InternalServer.registerServiceClass(target.constructor);\n    classData.addProperty(key, paramType);\n}\n\n\n/**\n * Decorator processor for HTTP verb annotations on methods\n */\nfunction processHttpVerb(target: any, propertyKey: string,\n\thttpMethod: HttpMethod) {\n\tlet serviceMethod: ServiceMethod = InternalServer.registerServiceMethod(target, propertyKey);\n    if (serviceMethod) { // does not intercept constructor\n\t\tif (serviceMethod.httpMethod) {\n\t\t\tthrow new Error(\"Method is already annotated with @\" +\n\t\t\t\tserviceMethod.httpMethod +\n\t\t\t\t\". You can only map a method to one HTTP verb.\");\n\t\t}\n\t\tserviceMethod.httpMethod = httpMethod;\n\t\tprocessServiceMethod(target, propertyKey, serviceMethod);\n    }\n}\n\n/**\n * Extract metadata for rest methods\n */\nfunction processServiceMethod(target: any, propertyKey: string, serviceMethod: ServiceMethod) {\n\tserviceMethod.name = propertyKey;\n\tserviceMethod.returnType = Reflect.getMetadata(\"design:returntype\", target, propertyKey);\n\tlet paramTypes = Reflect.getMetadata(\"design:paramtypes\", target, propertyKey);\n\twhile (paramTypes.length > serviceMethod.parameters.length) {\n\t\tserviceMethod.parameters.push(new MethodParam(null,\n\t\t\tparamTypes[serviceMethod.parameters.length], ParamType.body));\n\t}\n\n\tserviceMethod.parameters.forEach(param => {\n\t\tif (param.paramType == ParamType.cookie) {\n\t\t\tserviceMethod.mustParseCookies = true;\n\t\t}\n\t\telse if (param.paramType == ParamType.file) {\n\t\t\tserviceMethod.files.push(new FileParamData(param.name, true));\n\t\t}\n\t\telse if (param.paramType == ParamType.files) {\n\t\t\tserviceMethod.files.push(new FileParamData(param.name, false));\n\t\t}\n\t\telse if (param.paramType == ParamType.form) {\n\t\t\tif (serviceMethod.mustParseBody) {\n\t\t\t\tthrow Error(\"Can not use form parameters with a body parameter on the same method.\");\n\t\t\t}\n\t\t\tserviceMethod.mustParseForms = true;\n\t\t}\n\t\telse if (param.paramType == ParamType.body) {\n\t\t\tif (serviceMethod.mustParseForms) {\n\t\t\t\tthrow Error(\"Can not use form parameters with a body parameter on the same method.\");\n\t\t\t}\n\t\t\tif (serviceMethod.mustParseBody) {\n\t\t\t\tthrow Error(\"Can not use more than one body parameter on the same method.\");\n\t\t\t}\n\t\t\tserviceMethod.mustParseBody = true;\n\t\t}\n\t});\n}\n\n/**\n * Metadata for REST service classes\n */\nclass ServiceClass {\n\tconstructor(targetClass: Function) {\n\t\tthis.targetClass = targetClass;\n\t\tthis.methods = new Map<string, ServiceMethod>();\n\t}\n\n\ttargetClass: Function;\n\tpath: string;\n\tmethods: Map<string, ServiceMethod>;\n\tlanguages: Array<string>;\n\taccepts: Array<string>;\n\tproperties: Map<string, ParamType>;\n\t\n\taddProperty(key: string, paramType: ParamType) {\n\t\tif (!this.hasProperties()) {\n\t\t\tthis.properties = new Map<string, ParamType>();\n\t\t}\n\t\tthis.properties.set(key, paramType);\n\t}\n\n\thasProperties(): boolean {\n\t\treturn (this.properties && this.properties.size > 0);\n\t}\n}\n\n/**\n * Metadata for REST service methods\n */\nclass ServiceMethod {\n\tname: string;\n\tpath: string;\n\tresolvedPath: string;\n\thttpMethod: HttpMethod;\n\treturnType: Function;\n\tparameters: Array<MethodParam> = new Array<MethodParam>();\n\tmustParseCookies: boolean = false;\n\tfiles: Array<FileParamData> = new Array<FileParamData>();\n\tmustParseBody: boolean = false;\n\tmustParseForms: boolean = false;\n\tlanguages: Array<string>;\n\taccepts: Array<string>;\n\tresolvedLanguages: Array<string>;\n\tresolvedAccepts: Array<string>;\n}\n\n/**\n * Metadata for File parameters on REST methods\n */\nclass FileParamData {\n\tconstructor(name: string, singleFile: boolean) {\n\t\tthis.name = name;\n\t\tthis.singleFile = singleFile;\n\t}\n\n\tname: string;\n\tsingleFile: boolean;\n}\n\n/**\n * Metadata for REST service method parameters\n */\nclass MethodParam {\n\tconstructor(name: string, type: Function, paramType: ParamType) {\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.paramType = paramType;\n\t}\n\n\tname: string;\n\ttype: Function;\n\tparamType: ParamType;\n}\n\n/**\n * Enumeration of accepted parameter types\n */\nenum ParamType {\n\tpath,\n\tquery,\n\theader,\n\tcookie,\n\tform,\n\tbody,\n\tfile, \n\tfiles, \n\tcontext,\n\tcontext_request,\n\tcontext_response,\n\tcontext_next, \n\tcontext_accept,\n\tcontext_accept_language\n}\n\nclass InternalServer {\n\tstatic serverClasses: Map<string, ServiceClass> = new Map<string, ServiceClass>();\n\tstatic paths: Map<string, Set<HttpMethod>> = new Map<string, Set<HttpMethod>>();\n\tstatic pathsResolved: boolean = false;\n\tstatic cookiesSecret: string;\n\tstatic cookiesDecoder: (val: string) => string;\n\tstatic fileDest: string;\n\tstatic fileFilter: (req: Express.Request, file: Express.Multer.File, callback: (error: Error, acceptFile: boolean) => void) => void;\n\tstatic fileLimits: number;\n\n\trouter: express.Router;\n\tupload: multer.Instance; \n\n\tconstructor(router: express.Router) {\n\t\tthis.router = router;\n\t }\n\n\tstatic registerServiceClass(target: Function): ServiceClass {\n\t\tInternalServer.pathsResolved = false;\n\t\tlet name: string = target.name || target.constructor.name;\n\t\tif (!InternalServer.serverClasses.has(name)) {\n\t\t\tInternalServer.serverClasses.set(name, new ServiceClass(target));\n\t\t}\n\t\tlet serviceClass: ServiceClass = InternalServer.serverClasses.get(name);\n\t\treturn serviceClass;\n\t}\n\n\tstatic registerServiceMethod(target: Function, methodName: string): ServiceMethod {\n\t\tif (methodName) {\n\t\t\tInternalServer.pathsResolved = false;\n\t\t\tlet classData: ServiceClass = InternalServer.registerServiceClass(target);\n\t\t\tif (!classData.methods.has(methodName)) {\n\t\t\t\tclassData.methods.set(methodName, new ServiceMethod());\n\t\t\t}\n\t\t\tlet serviceMethod: ServiceMethod = classData.methods.get(methodName);\n\t\t\treturn serviceMethod;\n\t\t}\n\t\treturn null;\n\t}\n\n\tbuildServices() {\n\t\tInternalServer.serverClasses.forEach(classData => { \n\t\t\tclassData.methods.forEach(method => {\n\t\t\t\tthis.buildService(classData, method);\n\t\t\t});\n\t\t});\n\t\tInternalServer.pathsResolved = true;\n\t}\n\n\tbuildService(serviceClass: ServiceClass, serviceMethod: ServiceMethod) {\n\t\tlet handler = (req, res, next) => {\n\t\t\tthis.callTargetEndPoint(serviceClass, serviceMethod, req, res, next);\n\t\t};\n\n\t\tif (!serviceMethod.resolvedPath) {\n\t\t\tInternalServer.resolveProperties(serviceClass, serviceMethod);\n\t\t}\n\n\t\tlet middleware: Array<express.RequestHandler> = this.buildServiceMiddleware(serviceMethod);\n\t\tlet args: any[] = [serviceMethod.resolvedPath];\n\t\targs = args.concat(middleware);\n\t\targs.push(handler);\n\t\tswitch (serviceMethod.httpMethod) {\n\t\t \tcase HttpMethod.GET:\n\t\t\t\tthis.router.get.apply(this.router, args);\n\t\t \tbreak;\n\t\t\tcase HttpMethod.POST:\n\t\t\t\tthis.router.post.apply(this.router, args);\n\t\t\tbreak;\n\t\t\tcase HttpMethod.PUT:\n\t\t\t\tthis.router.put.apply(this.router, args);\n\t\t\tbreak;\n\t\t\tcase HttpMethod.DELETE:\n\t\t\t\tthis.router.delete.apply(this.router, args);\n\t\t\tbreak;\n\t\t\tcase HttpMethod.HEAD:\n\t\t\t\tthis.router.head.apply(this.router, args);\n\t\t\tbreak;\n\t\t\tcase HttpMethod.OPTIONS:\n\t\t\t\tthis.router.options.apply(this.router, args);\n\t\t\tbreak;\n\t\t\tcase HttpMethod.PATCH:\n\t\t\t\tthis.router.patch.apply(this.router, args);\n\t\t\tbreak;\n\n\t\t \tdefault:\n\t\t\t\tthrow Error(\"Invalid http method for service [\" + serviceMethod.resolvedPath + \"]\");\n\t\t }\n\t}\n\n\tprivate getUploader(): multer.Instance {\n\t\tif (!this.upload) {\n\t\t\tlet options : multer.Options= {};\n\t\t\tif (InternalServer.fileDest) {\n\t\t\t\toptions.dest = InternalServer.fileDest;\n\t\t\t}\n\t\t\tif (InternalServer.fileFilter) {\n\t\t\t\toptions.fileFilter = InternalServer.fileFilter;\n\t\t\t}\n\t\t\tif (InternalServer.fileLimits) {\n\t\t\t\toptions.limits = InternalServer.fileLimits;\n\t\t\t}\n\t\t\tif (options.dest) {\n\t\t\t\tthis.upload = multer(options);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.upload = multer();\n\t\t\t}\n\t\t}\n\t\treturn this.upload;\n\t} \n\n\tprivate buildServiceMiddleware(serviceMethod: ServiceMethod): Array<express.RequestHandler> {\n\t\tlet result: Array<express.RequestHandler> = new Array<express.RequestHandler>();\n\n\t\tif (serviceMethod.mustParseCookies) {\n\t\t\tlet args = [];\n\t\t\tif (InternalServer.cookiesSecret) {\n\t\t\t\targs.push(InternalServer.cookiesSecret);\n\t\t\t}\n\t\t\tif (InternalServer.cookiesDecoder){\n\t\t\t\targs.push({ decode: InternalServer.cookiesDecoder });\n\t\t\t}\n\t\t\tresult.push(cookieParser.apply(this, args));\n\t\t}\n\t\tif (serviceMethod.mustParseBody) {\n\t\t\tresult.push(bodyParser.json());\n\t\t\t//TODO adicionar parser de XML para o body\n\t\t}\n\t\tif (serviceMethod.mustParseForms) {\n\t\t\tresult.push(bodyParser.urlencoded({ extended: true }));\n\t\t}\n\t\tif (serviceMethod.files.length > 0) {\n\t\t\tlet options: Array<multer.Field> = new Array<multer.Field>();\n\t\t\tserviceMethod.files.forEach(fileData => {\n\t\t\t\tif (fileData.singleFile) {\n\t\t\t\t\toptions.push({\"name\": fileData.name,  \"maxCount\": 1});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\toptions.push({\"name\": fileData.name});\n\t\t\t\t}\n\t\t\t});\n\t\t\tresult.push(this.getUploader().fields(options));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate processResponseHeaders(serviceMethod: ServiceMethod, context: ServiceContext) {\n\t\tif (serviceMethod.resolvedLanguages) {\n\t\t\tif (serviceMethod.httpMethod === HttpMethod.GET) {\n\t\t\t\tcontext.response.vary(\"Accept-Language\");\n\t\t\t}\n\t\t\tcontext.response.set(\"Content-Language\", context.language);\n\t\t}\n\t\tif (serviceMethod.resolvedAccepts) {\n\t\t\tcontext.response.vary(\"Accept\");\n\t\t}\n\t}\n\n\tprivate acceptable(serviceMethod: ServiceMethod, context: ServiceContext) : boolean {\n\t\tif (serviceMethod.resolvedLanguages) {\n\t\t\t let lang: any = context.request.acceptsLanguages(serviceMethod.resolvedLanguages);\n\t\t\t if (lang) {\n\t\t\t\t context.language = <string> lang;\n\t\t\t }\n\t\t}\n\t\telse {\n\t\t\t let languages: string[] = context.request.acceptsLanguages();\n\t\t\t if (languages && languages.length > 0) {\n\t\t\t\t context.language = languages[0];\n\t\t\t }\n\t\t}\n\n\t\tif (serviceMethod.resolvedAccepts) {\n\t\t\t let accept: any = context.request.accepts(serviceMethod.resolvedAccepts);\n\t\t\t if (accept) {\n\t\t\t\t context.preferredMedia = <string> accept;\n\t\t\t }\n\t\t\t else {\n\t\t\t \treturn false;\n\t\t\t }\n\t\t}\n\n\t\tif (!context.language) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate createService(serviceClass: ServiceClass, context: ServiceContext) {\n\t\tlet serviceObject = Object.create(serviceClass.targetClass);\n\t\tif (serviceClass.hasProperties()) {\n\t\t\tserviceClass.properties.forEach((paramType, key) => {\n\t\t\t\tswitch (paramType) {\n\t\t\t\t\tcase ParamType.context:\n\t\t\t\t\t\tserviceObject[key] = context;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ParamType.context_accept_language:\n\t\t\t\t\t\tserviceObject[key] = context.language;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ParamType.context_accept:\n\t\t\t\t\t\tserviceObject[key] = context.preferredMedia;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ParamType.context_request:\n\t\t\t\t\t\tserviceObject[key] = context.request;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ParamType.context_response:\n\t\t\t\t\t\tserviceObject[key] = context.response;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ParamType.context_next:\n\t\t\t\t\t\tserviceObject[key] = context.next;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\treturn serviceObject;\n\t}\n\n\tprivate callTargetEndPoint(serviceClass: ServiceClass, serviceMethod: ServiceMethod, \n\t\treq: express.Request, res: express.Response, next: express.NextFunction) {\n\t\tlet context: ServiceContext = new ServiceContext();\n\t\tcontext.request = req;\n\t\tcontext.response = res;\n\t\tcontext.next = next;\n\n\t\tif (this.acceptable(serviceMethod, context)) {\n\t\t\tlet serviceObject = this.createService(serviceClass, context);\n\t\t\tlet args = this.buildArgumentsList(serviceMethod, context);\n\t\t\tlet result = serviceClass.targetClass.prototype[serviceMethod.name].apply(serviceObject, args);\n\n\t\t\tthis.processResponseHeaders(serviceMethod, context);\n\n\t\t\tif (serviceMethod.returnType) {\n\t\t\t\tlet serializedType = serviceMethod.returnType.name;\n\t\t\t\tswitch (serializedType) {\n\t\t\t\t\tcase \"String\":\n\t\t\t\t\t\tres.send(result);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Number\":\n\t\t\t\t\t\tres.send(result.toString());\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Boolean\":\n\t\t\t\t\t\tres.send(result.toString());\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Promise\":\n\t\t\t\t\t\tlet self = this;\n\t\t\t\t\t\tresult.then(function(value) {\n\t\t\t\t\t\t\tself.sendValue(value, res);\n\t\t\t\t\t\t}).catch(function(e){\n\t\t\t\t\t\t\tif (!res.headersSent) {\n\t\t\t\t\t\t\t\tres.sendStatus(500);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"undefined\":\n\t\t\t\t\t\tres.sendStatus(204);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tres.json(result);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.sendValue(result, res);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tres.sendStatus(406);\n\t\t}\n\t}\n\n\tprivate sendValue(value: any, res: express.Response) {\n\t\tswitch (typeof value) {\n\t\t\tcase \"number\":\n\t\t\t\tres.send(value.toString());\n\t\t\t\tbreak;\n\t\t\tcase \"string\":\n\t\t\t\tres.send(value);\n\t\t\t\tbreak;\n\t\t\tcase \"boolean\":\n\t\t\t\tres.send(value.toString());\n\t\t\t\tbreak;\n\t\t\tcase \"undefined\":\n\t\t\t\tif (!res.headersSent) {\n\t\t\t\t\tres.sendStatus(204);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (value.constructor.name == \"Promise\") {\n\t\t\t\t\tlet self = this;\n\t\t\t\t\tvalue.then(function(val) {\n\t\t\t\t\t\tself.sendValue(val, res);\n\t\t\t\t\t}).catch(function(e) {\n\t\t\t\t\t\tif (!res.headersSent) {\n\t\t\t\t\t\t\tres.sendStatus(500);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres.json(value);\n\t\t\t\t}\n\t\t}\n\t}\n\n\tprivate buildArgumentsList(serviceMethod: ServiceMethod, context: ServiceContext) {\n\t\tlet result: Array<any> = new Array<any>();\n\n\t\tserviceMethod.parameters.forEach(param => {\n\t\t\tswitch (param.paramType) {\n\t\t\t\tcase ParamType.path:\n\t\t\t\t\tresult.push(this.convertType(context.request.params[param.name], param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase ParamType.query:\n\t\t\t\t\tresult.push(this.convertType(context.request.query[param.name], param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase ParamType.header:\n\t\t\t\t\tresult.push(this.convertType(context.request.header(param.name), param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase ParamType.cookie:\n\t\t\t\t\tresult.push(this.convertType(context.request.cookies[param.name], param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase ParamType.body:\n\t\t\t\t\tresult.push(this.convertType(context.request.body, param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase ParamType.file:\n\t\t\t\t\tlet files : Array<Express.Multer.File> = context.request.files[param.name];\n\t\t\t\t\tif (files && files.length > 0) {\n\t\t\t\t\t\tresult.push(files[0]);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ParamType.files:\n\t\t\t\t\tresult.push(context.request.files[param.name]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ParamType.form:\n\t\t\t\t\tresult.push(this.convertType(context.request.body[param.name], param.type));\n\t\t\t\t\tbreak;\n\t\t\t\tcase ParamType.context:\n\t\t\t\t\tresult.push(context);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ParamType.context_request:\n\t\t\t\t\tresult.push(context.request);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ParamType.context_response:\n\t\t\t\t\tresult.push(context.response);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ParamType.context_next:\n\t\t\t\t\tresult.push(context.next);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ParamType.context_accept:\n\t\t\t\t\tresult.push(context.preferredMedia);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ParamType.context_accept_language:\n\t\t\t\t\tresult.push(context.language);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow Error(\"Invalid parameter type\");\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprivate convertType(paramValue: string, paramType: Function): any {\n\t\tlet serializedType = paramType.name;\n\t\tswitch (serializedType) {\n\t\t\tcase \"Number\":\n\t\t\t\treturn paramValue ? parseFloat(paramValue) : 0;\n\t\t\tcase \"Boolean\":\n\t\t\t\treturn paramValue === 'true';\n\t\t\tdefault:\n\t\t\t\treturn paramValue;\n\t\t}\n\t}\n\n//TODO: \n// Parametros do tipo DTO (@BeanParam). \n// criar tipo de retorno para donwload???\n// controlar cache\n// conditional requests\n// Adicionar anotações para Coleções de recursos e para operações \n// Suportar content-type XML (input e output)\n\tstatic resolveAllPaths() {\n\t\tif (!InternalServer.pathsResolved) {\n\t\t\tInternalServer.paths.clear();\n\t\t\tInternalServer.serverClasses.forEach(classData => {\n\t\t\t\tclassData.methods.forEach(method => {\n\t\t\t\t\tif (!method.resolvedPath) {\n\t\t\t\t\t\tInternalServer.resolveProperties(classData, method);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\tInternalServer.pathsResolved = true;\n\t\t}\n\t}\n\n\tstatic getPaths(): Set<string> {\n\t\tInternalServer.resolveAllPaths();\n\t\treturn new Set(InternalServer.paths.keys());\n\t}\n\n\tstatic getHttpMethods(path: string) : Set<HttpMethod>{\n\t\tInternalServer.resolveAllPaths();\n\t\tlet methods : Set<HttpMethod>  = InternalServer.paths.get(path);\n\t\treturn methods || new Set<HttpMethod>();\n\t}\n\n\tprivate static resolveLanguages(serviceClass: ServiceClass, serviceMethod: ServiceMethod) : void {\n\t\tlet resolvedLanguages = new Array<string>();\n\t\tif (serviceClass.languages) {\n\t\t\tserviceClass.languages.forEach(lang => {\n\t\t\t\tresolvedLanguages.push(lang);\n\t\t\t});\n\t\t}\n\t\tif (serviceMethod.languages) {\n\t\t\tserviceMethod.languages.forEach(lang => {\n\t\t\t\tresolvedLanguages.push(lang);\n\t\t\t});\n\t\t}\n\t\tif (resolvedLanguages.length > 0) {\n\t\t\tserviceMethod.resolvedLanguages = resolvedLanguages;\n\t\t}\n\t}\n\n\tprivate static resolveAccepts(serviceClass: ServiceClass, serviceMethod: ServiceMethod) : void {\n\t\tlet resolvedAccepts = new Array<string>();\n\t\tif (serviceClass.accepts) {\n\t\t\tserviceClass.accepts.forEach(accept => {\n\t\t\t\tresolvedAccepts.push(accept);\n\t\t\t});\n\t\t}\n\t\tif (serviceMethod.accepts) {\n\t\t\tserviceMethod.accepts.forEach(accept => {\n\t\t\t\tresolvedAccepts.push(accept);\n\t\t\t});\n\t\t}\n\t\tif (resolvedAccepts.length > 0) {\n\t\t\tserviceMethod.resolvedAccepts = resolvedAccepts;\n\t\t}\n\t}\n\n\tprivate static resolveProperties(serviceClass: ServiceClass, serviceMethod: ServiceMethod) : void {\n\t\tInternalServer.resolveLanguages(serviceClass, serviceMethod);\n\t\tInternalServer.resolveAccepts(serviceClass, serviceMethod);\t\t\n\t\tInternalServer.resolvePath(serviceClass, serviceMethod);\n\t}\n\n\tprivate static resolvePath(serviceClass: ServiceClass, serviceMethod: ServiceMethod) : void {\n\t\tlet classPath: string = serviceClass.path ? serviceClass.path.trim() : \"\";\n\t\tlet resolvedPath = classPath.startsWith('/') ? classPath : '/' + classPath;\n\t\tif (resolvedPath.endsWith('/')) {\n\t\t\tresolvedPath = resolvedPath.slice(0, resolvedPath.length - 1);\n\t\t}\n\n\t\tif (serviceMethod.path) {\n\t\t\tlet methodPath: string = serviceMethod.path.trim();\n\t\t\tresolvedPath = classPath + (methodPath.startsWith('/') ? methodPath : '/' + methodPath);\n\t\t}\n\n\t\tlet declaredHttpMethods: Set<HttpMethod> = InternalServer.paths.get(resolvedPath);\n\t\tif (!declaredHttpMethods) {\n\t\t\tdeclaredHttpMethods = new Set<HttpMethod>();\n\t\t\tInternalServer.paths.set(resolvedPath, declaredHttpMethods);\n\t\t}\n\t\tif (declaredHttpMethods.has(serviceMethod.httpMethod)) {\n\t\t\tthrow Error(\"Duplicated declaration for path [\" + resolvedPath + \"], method [\" \n\t\t\t\t+ serviceMethod.httpMethod + \"]. \");\n\t\t}\n\t\tdeclaredHttpMethods.add(serviceMethod.httpMethod);\n\t\tserviceMethod.resolvedPath = resolvedPath;\n\t}\n}\n"]}